<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>esshtml</groupId>
  <artifactId>esshtml</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>esshtml Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
  <org.springframework.version>4.2.5.RELEASE</org.springframework.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!-- 防止 jsp 报错  -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
    </dependency>
    <!-- JSTL 定制标签库  -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>11.2.0.3</version>
    </dependency>
  </dependencies>

    <build>
      <plugins>

        <!-- maven 编译插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>

            <!-- 源代码使用的开发版本 -->
            <source>1.8</source>
            <!-- 需要生成的目标class文件的编译版本 -->
            <target>1.8</target>
            <!--
            一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行
            (对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于
            source的情况
            -->
            <!-- 默认字符集编码 -->
            <encoding>UTF-8</encoding>

            <!-- 这下面的是可选项 -->
            <meminitial>128m</meminitial>
            <maxmem>512m</maxmem>
            <fork>true</fork> <!-- fork is enable,用于明确表示编译版本配置的可用 -->
            <compilerVersion>1.3</compilerVersion>

            <!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->
            <compilerArgument>-verbose -bootclasspath ${java.home}\lib\rt.jar</compilerArgument>

          </configuration>
        </plugin>
      </plugins>

      <!-- 最终的项目名称 -->
      <finalName>esshtml</finalName>
    </build>

</project>
